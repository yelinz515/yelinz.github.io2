{"version":3,"file":"component---src-pages-using-typescript-tsx.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["React","Link","Layout","Seo","UsingTypescript","data","path","location","title","site","buildTime","href","to","Head","query","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","Date","getFullYear","PropTypes","useStaticQuery","description","lang","metaDescription","siteMetadata","defaultTitle","social","twitter","defaultProps","propTypes","string","isRequired"],"sourceRoot":""}