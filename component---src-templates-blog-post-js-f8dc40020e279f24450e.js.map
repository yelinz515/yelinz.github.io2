{"version":3,"file":"component---src-templates-blog-post-js-f8dc40020e279f24450e.js","mappings":"sQAoCA,EAlCMA,SAAAA,GACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAEKC,WAAaC,EAAAA,YAClB,EAAKC,MAAQ,CAAEC,OAAQ,WAJN,CAKlB,EANGL,EAAAA,EAAAA,GAAAA,EAAAA,GAMH,kBAyBA,OAzBA,EAEDM,kBAAA,WAAqB,IAAD,OACZC,EAAWC,SAASC,cAAc,UACxCF,EAASG,OAAS,kBAAM,EAAKC,SAAS,CAAEN,OAAQ,WAA9B,EAClBE,EAASK,QAAU,kBAAM,EAAKD,SAAS,CAAEN,OAAQ,UAA9B,EACnBE,EAASM,OAAQ,EACjBN,EAASO,IAAM,gCACfP,EAASQ,aAAa,OAAQ,2BAC9BR,EAASQ,aAAa,aAAc,SACpCR,EAASQ,aAAa,QAAS,gBAC/BR,EAASQ,aAAa,cAAe,aACrCC,KAAKd,WAAWe,QAAQC,YAAYX,EACrC,IAEDY,OAAA,WACE,IAAQd,EAAWW,KAAKZ,MAAhBC,OAER,OACE,uBAAKe,UAAU,oBACD,WAAXf,GAAuB,uDACZ,YAAXA,GAAwB,gDACzB,uBAAKgB,IAAKL,KAAKd,aAGpB,IA/BGF,CAAmBG,EAAAA,WC+DZmB,EAAO,SAAC,GAAwC,IAAdC,EAAa,EAArCC,KAAQC,eAC7B,OACE,gBAAC,IAAD,CACEC,MAAOH,EAAKI,YAAYD,MACxBE,YAAaL,EAAKI,YAAYC,aAAeL,EAAKM,SAGvD,EAED,EAlEyB,SAAC,GAGnB,IAAD,MAFJL,KAAQM,EAEJ,EAFIA,SAAUC,EAEd,EAFcA,KAAMC,EAEpB,EAFoBA,KAAsBT,EAE1C,EAF0BE,eAC9BQ,EACI,EADJA,SAEMC,GAAY,UAAAF,EAAKG,oBAAL,eAAmBT,QAAnB,QAElB,OACE,gBAAC,IAAD,CAAQO,SAAUA,EAAUP,MAAOQ,GACjC,2BACEd,UAAU,YACVgB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYf,EAAKI,YAAYD,OAC1C,yBAAIH,EAAKI,YAAYY,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQlB,EAAKmB,MACxCJ,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAD,QAGJ,uBAAKlB,UAAU,iBACb,sBACEuB,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGlB,GACC,gBAAC,EAAAmB,KAAD,CAAMC,GAAIpB,EAASqB,OAAOC,KAAMC,IAAI,QAApC,KACKvB,EAASH,YAAYD,QAI9B,0BACGK,GACC,gBAAC,EAAAkB,KAAD,CAAMC,GAAInB,EAAKoB,OAAOC,KAAMC,IAAI,QAC7BtB,EAAKJ,YAAYD,MADpB,SAOR,gBAAC,EAAD,MAGL,C","sources":["webpack://gatsby-starter-blog/./src/components/Utterances.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import React from 'react'\n\nclass Utterances extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.commentsEl = React.createRef()\n    this.state = { status: 'pending' }\n  }\n\n  componentDidMount() {\n    const scriptEl = document.createElement('script')\n    scriptEl.onload = () => this.setState({ status: 'success' })\n    scriptEl.onerror = () => this.setState({ status: 'failed' })\n    scriptEl.async = true\n    scriptEl.src = 'https://utteranc.es/client.js'\n    scriptEl.setAttribute('repo', 'yelinz515/blog-comments')\n    scriptEl.setAttribute('issue-term', 'title')\n    scriptEl.setAttribute('theme', 'github-light')\n    scriptEl.setAttribute('crossorigin', 'anonymous')\n    this.commentsEl.current.appendChild(scriptEl)\n  }\n\n  render() {\n    const { status } = this.state\n\n    return (\n      <div className=\"comments-wrapper\">\n        {status === 'failed' && <div>Error. Please try again.</div>}\n        {status === 'pending' && <div>Loading script...</div>}\n        <div ref={this.commentsEl} />\n      </div>\n    )\n  }\n}\n\nexport default Utterances","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Utterances from \"../components/Utterances\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n      <Utterances />\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Utterances","props","commentsEl","React","state","status","componentDidMount","scriptEl","document","createElement","onload","setState","onerror","async","src","setAttribute","this","current","appendChild","render","className","ref","Head","post","data","markdownRemark","title","frontmatter","description","excerpt","previous","next","site","location","siteTitle","siteMetadata","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}