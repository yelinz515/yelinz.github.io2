{"componentChunkName":"component---src-templates-blog-post-js","path":"/2022-07-26-post.md/","result":{"data":{"site":{"siteMetadata":{"title":"FE Yerin Blog"}},"markdownRemark":{"id":"bcbd3a66-c388-5b2d-9305-6b3a016848a8","excerpt":"☑️ Bare Minimum Test underbar 라는 과제를 하는 이유는 고차함수에 대해 더욱 깊게 이해하기 위해 시작했다. 📍 핵심 키워드 callback function -> 전달인자로 들어가는 함수 _.filter, _.map, _.reduce, _.foreach…","html":"<h2>☑️ Bare Minimum Test</h2>\n<p>underbar 라는 과제를 하는 이유는 고차함수에 대해 더욱 깊게 이해하기 위해 시작했다.</p>\n<h4>📍 핵심 키워드</h4>\n<ul>\n<li>callback function -> 전달인자로 들어가는 함수</li>\n<li>_.filter, _.map, _.reduce, _.foreach를 직접 만들어 callback</li>\n</ul>\n<h3>✔️ _.foreach</h3>\n<blockquote>\n<p>forEach() 메서드는 주어진 함수를 배열 요소 각각에 대해 실행</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">arr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>currentvalue<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> thisArg<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>세 가지 매개변수를 받는다는 것과 반환 값이 없다는 것이 특징이다.</p>\n<h3>✔️ _.indexOf</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">_<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">indexOf</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">arr<span class=\"token punctuation\">,</span> target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 배열의 모든 요소에 접근하려면, 순회 알고리즘(iteration algorithm)을 구현해야 합니다.</span>\n  <span class=\"token comment\">// 반복문을 사용하는 것이 가장 일반적이지만, 지금부터는 이미 구현한 _.each 함수를 활용하여야 합니다.</span>\n  <span class=\"token comment\">// 아래 _.indexOf의 구현을 참고하시기 바랍니다.</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> \n\n  _<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>item <span class=\"token operator\">===</span> target <span class=\"token operator\">&amp;&amp;</span> result <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// -1인 이유 : 반복되는 숫자의 두번 째 인덱스를 가져오지 않기 위해 사용</span>\n      <span class=\"token comment\">// 없는 값도 -1을 반환</span>\n      result <span class=\"token operator\">=</span> index<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 이 값에 따라 let result = -1; 값도 달라짐</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<br>\n<blockquote>\n<h2>마무리 👀</h2>\n</blockquote>\n<p>고차함수의 끝판왕을 맛 본 것 같다. 연습 많이 해야겠다!!!</p>\n<p>❤️진짜 정신차리고 열심히 하자!!❤️</p>\n<p><strong>꾸준히 자기주도적 학습을 하고 새롭게 알게 된 내용을 바탕으로 TIL를 작성하겠습니다.</strong> 😊</p>","frontmatter":{"title":"[6주차] underbar - 2일차","date":"July 26, 2022","description":null}},"previous":{"fields":{"slug":"/2022-07-25-post.md/"},"frontmatter":{"title":"[6주차] [JavaScript] 프로토타입 체인 - 1일차"}},"next":{"fields":{"slug":"/2022-07-27-post.md/"},"frontmatter":{"title":"[6주차] [JS/Node] 비동기 / 선배적 참견 시점 - 3일차"}}},"pageContext":{"id":"bcbd3a66-c388-5b2d-9305-6b3a016848a8","previousPostId":"8f679b74-4b49-5d16-8b34-0e63fb372300","nextPostId":"d35c3cea-8112-5e1a-9835-413630a549f6"}},"staticQueryHashes":["2841359383","3257411868"]}