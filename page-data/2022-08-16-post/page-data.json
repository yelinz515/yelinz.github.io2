{"componentChunkName":"component---src-templates-blog-post-js","path":"/2022-08-16-post/","result":{"data":{"site":{"siteMetadata":{"title":"FE Yerin Blog"}},"markdownRemark":{"id":"8c7af138-1f01-5665-837c-ed1297534242","excerpt":"Express 프레임워크로 StatesAirline API Server 구현하는 과제를 해보았다. ✅ 과제 시작 전 Express 공식문서에서  , 를 사용하는 방법을 확인할 것이다. req.query 위 코드는 id과 name…","html":"<p>Express 프레임워크로 StatesAirline API Server 구현하는 과제를 해보았다.</p>\n<h3>✅ 과제 시작 전</h3>\n<p>Express 공식문서에서 <code class=\"language-text\">req.query</code> , <code class=\"language-text\">req.params</code>를 사용하는 방법을 확인할 것이다.</p>\n<h4>req.query</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// localhost:3000/topic?id=1&amp;name=foo</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/topic'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>id <span class=\"token operator\">+</span> <span class=\"token string\">','</span> <span class=\"token operator\">+</span> req<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위 코드는 id과 name 값을 동시에 가져올 수 있다. <code class=\"language-text\">localhost:3000/topic?id=1&amp;name=foo</code> 에 들어간다고 가정하자. 화면에 <code class=\"language-text\">1,foo</code> 가 보일 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// localhost:3000/topic?id=1</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/topic'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> topics <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'JavaScript is ....'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Nodejs is ....'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Express is ....'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>topics<span class=\"token punctuation\">[</span>req<span class=\"token punctuation\">,</span>query<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위 코드는 배열로 값들을 가져온다. <code class=\"language-text\">localhost:3000/topic?id=1</code> 에 들어간다고 가정하면, id가 1이기 때문에<code class=\"language-text\"> topic[1]</code>인 <code class=\"language-text\">Nodejs is....</code>가 화면에 보인다.</p>\n<p>실제로는 <code class=\"language-text\">topics</code>에 파일이나 데이터베이스로 교체해서 짧은 코드로 값을 가져올 것이다.</p>\n<h4>req.params</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//localhost:3000/page/CSS</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'page/:pageId'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">localhost:3000/page/CSS</code>에 들어간다고 하면 아래와 같은 결과가 나올 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span><span class=\"token string\">\"pageId : \"</span><span class=\"token constant\">CSS</span>\"<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">req.params</code>안에는 객체가 들어가 있고, 그 객체의 <strong>pageId</strong> 프로퍼티 값을 통해서 <strong>CSS</strong>라는 값을 가져온다는 뜻이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//localhost:3000/page/CSS/WEB</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'page/:pageId/:chaperId'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"pageId\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"CSS\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"chaperId\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"WEB\"</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h3>✅ StatesAirline-Server(수정)</h3>\n<ul>\n<li><code class=\"language-text\">app.use</code>의 위치가 굉장히 중요하다.</li>\n<li><code class=\"language-text\">req.query</code> -> 쿼리 파라미터</li>\n<li><code class=\"language-text\">req.params</code> -> path 파라미터</li>\n</ul>\n<h4>flightController.js</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> flights <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../repository/flightList'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// [GET] /flight</span>\n  <span class=\"token comment\">// 요청 된 파라미터 departure_times, arrival_times 값과 동일한 값을 가진 항공편 데이터를 조회합니다.</span>\n  <span class=\"token comment\">// 요청 된 파라미터 departure, destination 값과 동일한 값을 가진 항공편 데이터를 조회합니다.</span>\n  <span class=\"token function-variable function\">findAll</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> departure_times<span class=\"token punctuation\">,</span> arrival_times<span class=\"token punctuation\">,</span> destination<span class=\"token punctuation\">,</span> departure <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// TODO:</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>departure_times <span class=\"token operator\">&amp;&amp;</span> arrival_times<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> filtered <span class=\"token operator\">=</span> flights<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>departure_times <span class=\"token operator\">===</span> departure_times <span class=\"token operator\">&amp;&amp;</span> item<span class=\"token punctuation\">.</span>arrival_times <span class=\"token operator\">===</span> arrival_times<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>filtered<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>destination <span class=\"token operator\">&amp;&amp;</span> departure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> filtered <span class=\"token operator\">=</span> flights<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>destination <span class=\"token operator\">===</span> destination <span class=\"token operator\">&amp;&amp;</span> item<span class=\"token punctuation\">.</span>departure <span class=\"token operator\">===</span> departure<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>filtered<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>flights<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// [GET] /flight/:uuid</span>\n  <span class=\"token comment\">// 요청 된 uuid 값과 동일한 uuid 값을 가진 항공편 데이터를 조회합니다.</span>\n  <span class=\"token function-variable function\">findById</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> uuid <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// TODO:</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>uuid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> filtered <span class=\"token operator\">=</span> flights<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>uuid <span class=\"token operator\">===</span> uuid<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>filtered<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Advanced</span>\n  <span class=\"token comment\">// [PUT] /flight/:uuid 요청을 수행합니다.</span>\n  <span class=\"token comment\">// 요청 된 uuid 값과 동일한 uuid 값을 가진 항공편 데이터를 요쳥 된 Body 데이터로 수정합니다.</span>\n  <span class=\"token function-variable function\">update</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> uuid <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> bodyData <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// req.body는 default 값으로 Undefined 설정되기 때문에 json parser를 해야한다.</span>\n     <span class=\"token comment\">// TODO</span>\n     <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>uuid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> filtered <span class=\"token operator\">=</span> flights<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>uuid <span class=\"token operator\">===</span> uuid<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// filtered[0]해준 이유는 filtered는 '하나의 객체를 가지고 있는 배열'이기 때문이다</span>\n      <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>filtered<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> bodyData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//filtered[0] + bodyData</span>\n        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// filtered = [{\"arrival_times\": \"2021-12-04T12:00:00\", </span>\n      <span class=\"token comment\">// \"departure\": \"CJU\", \"departure_times\": \"2021-12-03T12:00:00\", </span>\n      <span class=\"token comment\">// \"destination\": \"ICN\", </span>\n      <span class=\"token comment\">// \"uuid\": \"af6fa55c-da65-47dd-af23-578fdba99bed\"}]</span></code></pre></div>\n<h4>bookController.js</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// POST /book에서 사용할 uuid입니다.</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">v4</span><span class=\"token operator\">:</span> uuid <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uuid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 항공편 예약 데이터를 저장합니다.</span>\n<span class=\"token keyword\">let</span> booking <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// [GET] /book 요청을 수행합니다.</span>\n  <span class=\"token comment\">// 전체 예약 데이터를 조회합니다.</span>\n  <span class=\"token function-variable function\">findAll</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>booking<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// [GET] /book/:phone 요청을 수행합니다.2</span>\n  <span class=\"token comment\">// 요청 된 phone과 동일한 phone 예약 데이터를 조회합니다.</span>\n  <span class=\"token function-variable function\">findByPhone</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>phone<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// TODO</span>\n    <span class=\"token comment\">// router.get('/:phone', findByPhone);</span>\n    <span class=\"token keyword\">let</span> list <span class=\"token operator\">=</span> booking<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>phone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      list <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>phone <span class=\"token operator\">===</span> phone\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// [GET] /book/:phone/:flight_uuid 요청을 수행합니다.3</span>\n  <span class=\"token comment\">// 요청 된 id, phone과 동일한 uuid, phone 예약 데이터를 조회합니다.</span>\n  <span class=\"token function-variable function\">findByPhoneAndFlightId</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span>res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>phone<span class=\"token punctuation\">,</span> flight_uuid<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// TODO:</span>\n    <span class=\"token comment\">//router.get('/:phone/:flight_uuid', findByPhoneAndFlightId);</span>\n\n    <span class=\"token keyword\">let</span> list <span class=\"token operator\">=</span> booking<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flight_uuid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      list <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>flight_uuid <span class=\"token operator\">===</span> flight_uuid<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>phone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      list <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>phone <span class=\"token operator\">===</span> phone<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// [POST] /book 요청을 수행합니다.</span>\n  <span class=\"token comment\">// 요청 된 예약 데이터를 저장합니다.1</span>\n  <span class=\"token comment\">// router.post('/', create);</span>\n  <span class=\"token function-variable function\">create</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// POST /book에서 사용할 booking_uuid입니다.</span>\n    <span class=\"token keyword\">const</span> booking_uuid <span class=\"token operator\">=</span> <span class=\"token function\">uuid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// TODO:</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>booking_uuid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      booking<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> \n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"StatesAirline API Server","date":"August 15, 2022","description":null}},"previous":{"fields":{"slug":"/2022-08-12-post/"},"frontmatter":{"title":"[8주차] Refactor Express - 5일차"}},"next":{"fields":{"slug":"/Nomadcoders_twitter/"},"frontmatter":{"title":"[Nomadcoders] Twitter clone Coding"}}},"pageContext":{"id":"8c7af138-1f01-5665-837c-ed1297534242","previousPostId":"766db0d1-029e-54f3-8de4-632fea6f23ca","nextPostId":"73dea074-65a3-5744-8755-9482c7da491e"}},"staticQueryHashes":["2841359383","3257411868"]}